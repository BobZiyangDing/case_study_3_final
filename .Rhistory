print(num_REP)
}
noncompetitive <- c(1,4,5,6,10,12)
district <- NULL
for(i in length(noncompetitive))
{
dist_num <- noncompetitive[i]
dist_data <- history %>% filter(cong_dist_abbrv == dist_num)
print(dist_data)
num_DEM <- length(dist_data %>% filter(voted_party_cd == "DEM"))
num_REP <- length(dist_data %>% filter(voted_party_cd == "REP"))
REP_pct <- num_REP / (num_REP + num_DEM)
district[i] <- REP_pct
}
unique(history$cong_dist_abbrv)
district
dist_data <- history %>% filter(cong_dist_abbrv == 1)
dist_data
num_DEM <- length(dist_data %>% filter(voted_party_cd == "DEM"))
num_DEM
dist_data %>% filter(voted_party_cd == "DEM")
num_DEM <- nrow(dist_data %>% filter(voted_party_cd == "DEM"))
num_DEM
noncompetitive <- c(1,4,5,6,10,12)
district <- NULL
for(i in length(noncompetitive))
{
dist_num <- noncompetitive[i]
dist_data <- history %>% filter(cong_dist_abbrv == dist_num)
print(dist_data)
num_DEM <- nrow(dist_data %>% filter(voted_party_cd == "DEM"))
num_REP <- nrow(dist_data %>% filter(voted_party_cd == "REP"))
REP_pct <- num_REP / (num_REP + num_DEM)
district[i] <- REP_pct
}
district
noncompetitive <- c(1,4,5,6,10,12)
district <- c()
for(i in length(noncompetitive))
{
dist_num <- noncompetitive[i]
dist_data <- history %>% filter(cong_dist_abbrv == dist_num)
num_DEM <- nrow(dist_data %>% filter(voted_party_cd == "DEM"))
num_REP <- nrow(dist_data %>% filter(voted_party_cd == "REP"))
REP_pct <- num_REP / (num_REP + num_DEM)
district[i] <- REP_pct
}
district
dist_data <- history %>% filter(cong_dist_abbrv == 1)
num_DEM <- nrow(dist_data %>% filter(voted_party_cd == "DEM"))
num_REP <- nrow(dist_data %>% filter(voted_party_cd == "REP"))
num_DEM
num_REP
REP_pct <- num_REP / (num_REP + num_DEM)
REP_pct
district[i] <- REP_pct
district[1] <- REP_pct
district
noncompetitive <- c(1,4,5,6,10,12)
district <- c()
for(i in length(noncompetitive))
{
dist_num <- noncompetitive[i]
dist_data <- history %>% filter(cong_dist_abbrv == dist_num)
num_DEM <- nrow(dist_data %>% filter(voted_party_cd == "DEM"))
num_REP <- nrow(dist_data %>% filter(voted_party_cd == "REP"))
REP_pct <- num_REP / (num_REP + num_DEM)
print(REP_pct)
district[i] <- REP_pct
}
noncompetitive <- c(1,4,5,6,10,12)
district <- c()
for(i in 1:length(noncompetitive))
{
dist_num <- noncompetitive[i]
dist_data <- history %>% filter(cong_dist_abbrv == dist_num)
num_DEM <- nrow(dist_data %>% filter(voted_party_cd == "DEM"))
num_REP <- nrow(dist_data %>% filter(voted_party_cd == "REP"))
REP_pct <- num_REP / (num_REP + num_DEM)
print(REP_pct)
district[i] <- REP_pct
}
district
house_r
history
history$election_lbl <- as.Date(history, "%m/%d%Y")
history$election_lbl <- as.Date(history$election_lbl, "%m/%d%Y")
history
history <- readRDS("ncvhis_Statewide_small.rds")
history$election_lbl <- as.Date(history$election_lbl,  "%m/%d/%y")
history
history$cong_dist_abbrv[history$county_desc == "BUNCOMBE"] <- 11
history$cong_dist_abbrv[history$county_desc == "ALLEGHANY"] <- 5
history$cong_dist_abbrv[history$county_desc == "DAVIDSON"] <- 13
history$cong_dist_abbrv[history$county_desc == "BUNCOMBE"] <- 11
history$cong_dist_abbrv[history$county_desc == "CLAY"] <- 11
history$cong_dist_abbrv[history$county_desc == "POLK"] <- 11
history$cong_dist_abbrv[history$county_desc == "CALDWELL"] <- 5
history$cong_dist_abbrv[history$county_desc == "VANCE"] <- 1
history$cong_dist_abbrv[history$county_desc == "RICHMOND"] <- 9
history$cong_dist_abbrv[history$county_desc == "MECKLENBURG"] <- 12
history$cong_dist_abbrv[history$county_desc == "ROBESON"] <- 9
history$cong_dist_abbrv[history$county_desc == "CUMBERLAND"] <- 8
history$cong_dist_abbrv[history$county_desc == "CABARRUS"] <- 8
history$cong_dist_abbrv[history$county_desc == "ROWAN"] <- 13
history$cong_dist_abbrv[history$county_desc == "JOHNSTON"] <- 7
history$cong_dist_abbrv[history$county_desc == "COLUMBUS"] <- 7
history$cong_dist_abbrv[history$county_desc == "BLADEN"] <- 7
history$cong_dist_abbrv[history$county_desc == "DURHAM"] <- 4
history$cong_dist_abbrv[history$county_desc == "CARTERET"] <- 3
history$cong_dist_abbrv[history$county_desc == "CHATHAM"] <- 4
history$cong_dist_abbrv[history$county_desc == "RANDOLPH"] <- 6
history$cong_dist_abbrv[history$county_desc == "GUILFORD"] <- 6
history$cong_dist_abbrv[history$county_desc == "CRAVEN"] <- 3
history$cong_dist_abbrv[history$county_desc == "DUPLIN"] <- 3
history$cong_dist_abbrv[history$county_desc == "GRANVILLE"] <- 4
history$cong_dist_abbrv[history$county_desc == "HALIFAX"] <- 1
history$cong_dist_abbrv[history$county_desc == "NORTHAMPTON"] <- 1
history$cong_dist_abbrv[history$county_desc == "MONTGOMERY"] <- 8
history$cong_dist_abbrv[history$county_desc == "ONSLOW"] <- 3
history$cong_dist_abbrv[history$county_desc == "ORANGE"] <- 4
history$cong_dist_abbrv[history$county_desc == "PAMLICO"] <- 3
history$cong_dist_abbrv[history$county_desc == "PENDER"] <- 7
history$cong_dist_abbrv[history$county_desc == "PERQUIMANS"] <- 3
history$cong_dist_abbrv[history$county_desc == "PITT"] <- 1
history$cong_dist_abbrv[history$county_desc == "RUTHERFORD"] <- 11
history$cong_dist_abbrv[history$county_desc == "STANLY"] <- 8
history$cong_dist_abbrv[history$county_desc == "YADKIN"] <- 10
history$cong_dist_abbrv[history$county_desc == "ANSON"] <- 9
history$cong_dist_abbrv[history$county_desc == "BEAUFORT"] <- 3
history$cong_dist_abbrv[history$county_desc == "BERTIE"] <- 1
history$cong_dist_abbrv[history$county_desc == "BRUNSWICK"] <- 7
history$cong_dist_abbrv[history$county_desc == "CAMDEN"] <- 11
history$cong_dist_abbrv[history$county_desc == "AVERY"] <- 5
history$cong_dist_abbrv[history$county_desc == "CASWELL"] <- 13
history$cong_dist_abbrv[history$county_desc == "CATAWBA"] <- 10
history$cong_dist_abbrv[history$county_desc == "CHEROKEE"] <- 11
noncompetitive <- c(1,4,5,6,10,12)
district <- c()
for(i in 1:length(noncompetitive))
{
dist_num <- noncompetitive[i]
dist_data <- history %>% filter(cong_dist_abbrv == dist_num)
num_DEM <- nrow(dist_data %>% filter(voted_party_cd == "DEM"))
num_REP <- nrow(dist_data %>% filter(voted_party_cd == "REP"))
REP_pct <- num_REP / (num_REP + num_DEM)
print(REP_pct)
district[i] <- REP_pct
}
# history
as.Date(house$end_date, "%m/%d/%Y")
unique(as.Date(house$end_date, "%m/%d/%Y"))
history$cong_dist_abbrv[history$county_desc == "BUNCOMBE"] <- 11
history$cong_dist_abbrv[history$county_desc == "ALLEGHANY"] <- 5
history$cong_dist_abbrv[history$county_desc == "DAVIDSON"] <- 13
history$cong_dist_abbrv[history$county_desc == "BUNCOMBE"] <- 11
history$cong_dist_abbrv[history$county_desc == "CLAY"] <- 11
history$cong_dist_abbrv[history$county_desc == "POLK"] <- 11
history$cong_dist_abbrv[history$county_desc == "CALDWELL"] <- 5
history$cong_dist_abbrv[history$county_desc == "VANCE"] <- 1
history$cong_dist_abbrv[history$county_desc == "RICHMOND"] <- 9
history$cong_dist_abbrv[history$county_desc == "MECKLENBURG"] <- 12
history$cong_dist_abbrv[history$county_desc == "ROBESON"] <- 9
history$cong_dist_abbrv[history$county_desc == "CUMBERLAND"] <- 8
history$cong_dist_abbrv[history$county_desc == "CABARRUS"] <- 8
history$cong_dist_abbrv[history$county_desc == "ROWAN"] <- 13
history$cong_dist_abbrv[history$county_desc == "JOHNSTON"] <- 7
history$cong_dist_abbrv[history$county_desc == "COLUMBUS"] <- 7
history$cong_dist_abbrv[history$county_desc == "BLADEN"] <- 7
history$cong_dist_abbrv[history$county_desc == "DURHAM"] <- 4
history$cong_dist_abbrv[history$county_desc == "CARTERET"] <- 3
history$cong_dist_abbrv[history$county_desc == "CHATHAM"] <- 4
history$cong_dist_abbrv[history$county_desc == "RANDOLPH"] <- 6
history$cong_dist_abbrv[history$county_desc == "GUILFORD"] <- 6
history$cong_dist_abbrv[history$county_desc == "CRAVEN"] <- 3
history$cong_dist_abbrv[history$county_desc == "DUPLIN"] <- 3
history$cong_dist_abbrv[history$county_desc == "GRANVILLE"] <- 4
history$cong_dist_abbrv[history$county_desc == "HALIFAX"] <- 1
history$cong_dist_abbrv[history$county_desc == "NORTHAMPTON"] <- 1
history$cong_dist_abbrv[history$county_desc == "MONTGOMERY"] <- 8
history$cong_dist_abbrv[history$county_desc == "ONSLOW"] <- 3
history$cong_dist_abbrv[history$county_desc == "ORANGE"] <- 4
history$cong_dist_abbrv[history$county_desc == "PAMLICO"] <- 3
history$cong_dist_abbrv[history$county_desc == "PENDER"] <- 7
history$cong_dist_abbrv[history$county_desc == "PERQUIMANS"] <- 3
history$cong_dist_abbrv[history$county_desc == "PITT"] <- 1
history$cong_dist_abbrv[history$county_desc == "RUTHERFORD"] <- 11
history$cong_dist_abbrv[history$county_desc == "STANLY"] <- 8
history$cong_dist_abbrv[history$county_desc == "YADKIN"] <- 10
history$cong_dist_abbrv[history$county_desc == "ANSON"] <- 9
history$cong_dist_abbrv[history$county_desc == "BEAUFORT"] <- 3
history$cong_dist_abbrv[history$county_desc == "BERTIE"] <- 1
history$cong_dist_abbrv[history$county_desc == "BRUNSWICK"] <- 7
history$cong_dist_abbrv[history$county_desc == "CAMDEN"] <- 11
history$cong_dist_abbrv[history$county_desc == "AVERY"] <- 5
history$cong_dist_abbrv[history$county_desc == "CASWELL"] <- 13
history$cong_dist_abbrv[history$county_desc == "CATAWBA"] <- 10
history$cong_dist_abbrv[history$county_desc == "CHEROKEE"] <- 11
noncompetitive <- c(1,4,5,6,10,12)
district <- c()
for(i in 1:length(noncompetitive))
{
dist_num <- noncompetitive[i]
dist_data <- history %>% filter(cong_dist_abbrv == dist_num)
num_DEM <- nrow(dist_data %>% filter(voted_party_cd == "DEM"))
num_REP <- nrow(dist_data %>% filter(voted_party_cd == "REP"))
REP_pct <- num_REP / (num_REP + num_DEM)
district[i] <- REP_pct * 100
}
# history
house <- read_csv("house_polls.csv")
house <- house %>% filter(state == "North Carolina")
house$days_to_election = as.Date(house$election_date, "%m/%d/%Y") - as.Date(house$end_date, "%m/%d/%Y")
house <- house %>% filter(candidate_party %in% c("DEM","REP"))
days <- min(house$end_date)
days <- max(house$days_to_election)
days
days <- max(house$days_to_election)
total_day <- NULL
total_pct <- NULL
total_cong <- NULL
for(i in 1:length(district))
{
seq_day <- seq(days, 1, 1)
seq_pct <- rep(district[i], length(seq_day))
seq_cong <- rep(paste("district", district[i]),length(seq_day))
total_seq <- rbind(total_day, seq_day)
total_pct <- rbind(total_pct, seq_pct)
total_cong <- rbind(total_cong, seq_cong)
}
days <- max(house$days_to_election)
total_day <- NULL
total_pct <- NULL
total_cong <- NULL
for(i in 1:length(district))
{
seq_day <- seq(days, 1, -1)
seq_pct <- rep(district[i], length(seq_day))
seq_cong <- rep(paste("district", district[i]),length(seq_day))
total_seq <- rbind(total_day, seq_day)
total_pct <- rbind(total_pct, seq_pct)
total_cong <- rbind(total_cong, seq_cong)
}
length(total_cong)
dim(total_cong)
days <- max(house$days_to_election)
total_day <- NULL
total_pct <- NULL
total_cong <- NULL
for(i in 1:length(district))
{
seq_day <- seq(days, 1, -1)
seq_pct <- rep(district[i], length(seq_day))
seq_cong <- rep(paste("district", district[i]),length(seq_day))
total_seq <- cbind(total_day, seq_day)
total_pct <- cbind(total_pct, seq_pct)
total_cong <- cbind(total_cong, seq_cong)
}
dim(total_cong)
days <- max(house$days_to_election)
total_day <- NULL
total_pct <- NULL
total_cong <- NULL
for(i in 1:length(district))
{
seq_day <- seq(days, 1, -1)
seq_pct <- rep(district[i], length(seq_day))
seq_cong <- rep(paste("district", district[i]),length(seq_day))
total_seq <- bind(total_day, as.matrix(seq_day))
total_pct <- rbind(total_pct, as.matrix(seq_pct))
total_cong <- rbind(total_cong, as.matrix(seq_cong))
}
days <- max(house$days_to_election)
total_day <- NULL
total_pct <- NULL
total_cong <- NULL
for(i in 1:length(district))
{
seq_day <- seq(days, 1, -1)
seq_pct <- rep(district[i], length(seq_day))
seq_cong <- rep(paste("district", district[i]),length(seq_day))
total_seq <- rbind(total_day, as.matrix(seq_day))
total_pct <- rbind(total_pct, as.matrix(seq_pct))
total_cong <- rbind(total_cong, as.matrix(seq_cong))
}
dim(total_cong)
seq_cong
days <- max(house$days_to_election)
total_day <- NULL
total_pct <- NULL
total_cong <- NULL
for(i in 1:length(district))
{
seq_day <- seq(days, 1, -1)
seq_pct <- rep(district[i], length(seq_day))
seq_cong <- rep(paste("district", noncompetitive[i]),length(seq_day))
total_seq <- rbind(total_day, as.matrix(seq_day))
total_pct <- rbind(total_pct, as.matrix(seq_pct))
total_cong <- rbind(total_cong, as.matrix(seq_cong))
}
seq_cong
append_house <- as.data.frame(total_seq, total_pct, total_cong)
append_house <- data.frame(total_seq, total_pct, total_cong)
append_house
names(append_house) <- c("days to days_to_election", "pct", "seat_name")
append_house
names(append_house) <- c("days_to_election", "pct", "seat_name")
rbind(house, append_house)
dplyr::bind_rows(house, append_house)
names(append_house) <- c("days_to_election", "pct", "seat_name")
append_house
house$days_to_election = as.double(as.Date(house$election_date, "%m/%d/%Y") - as.Date(house$end_date, "%m/%d/%Y"))
house
dplyr::bind_rows(house, append_house)
house <- dplyr::bind_rows(house, append_house)
house <- read_csv("house_polls.csv")
house <- house %>% filter(state == "North Carolina")
house$days_to_election = as.double(as.Date(house$election_date, "%m/%d/%Y") - as.Date(house$end_date, "%m/%d/%Y"))
house <- house %>% filter(candidate_party %in% c("DEM","REP"))
days <- max(house$days_to_election)
total_day <- NULL
total_pct <- NULL
total_cong <- NULL
for(i in 1:length(district))
{
seq_day <- seq(as.double(days), 1, -1)
seq_pct <- rep(district[i], length(seq_day))
seq_cong <- rep(paste("district", noncompetitive[i]),length(seq_day))
total_seq <- rbind(total_day, as.matrix(seq_day))
total_pct <- rbind(total_pct, as.matrix(seq_pct))
total_cong <- rbind(total_cong, as.matrix(seq_cong))
}
append_house <- data.frame(total_seq, total_pct, total_cong)
names(append_house) <- c("days_to_election", "pct", "seat_name")
house <- dplyr::bind_rows(house, append_house)
cong_dist <- house$seat_name %>% unique
house$y = ifelse(house$candidate_party == "REP", house$pct, 100-house$pct) # support ratio for rep
house$r <- match(house$seat_name, cong_dist)
house$t <- house$days_to_election + 1 #WHY PLUS ONE?
house_y<- house$y
house_r<- house$r
house_t<- house$t
N_polls <- house_y %>% length
N_states <- cong_dist %>% length
N_days <- house_t %>% max
cong_dist
house <- read_csv("house_polls.csv")
house <- house %>% filter(state == "North Carolina")
house$days_to_election = as.double(as.Date(house$election_date, "%m/%d/%Y") - as.Date(house$end_date, "%m/%d/%Y"))
house <- house %>% filter(candidate_party %in% c("DEM","REP"))
days <- max(house$days_to_election)
total_day <- NULL
total_pct <- NULL
total_cong <- NULL
for(i in 1:length(district))
{
seq_day <- seq(as.double(days), 1, -1)
seq_pct <- rep(district[i], length(seq_day))
seq_cong <- rep(paste("district", noncompetitive[i]),length(seq_day))
total_seq <- rbind(total_day, as.matrix(seq_day))
total_pct <- rbind(total_pct, as.matrix(seq_pct))
total_cong <- rbind(total_cong, as.matrix(seq_cong))
}
append_house <- data.frame(total_seq, total_pct, total_cong)
names(append_house) <- c("days_to_election", "pct", "seat_name")
house <- dplyr::bind_rows(house, append_house)
cong_dist <- house$seat_name %>% unique
house$y = ifelse(house$candidate_party == "REP", house$pct, 100-house$pct) # support ratio for rep
house$r <- match(house$seat_name, cong_dist)
house$t <- house$days_to_election + 1 #WHY PLUS ONE?
house_y<- house$y
house_r<- house$r
house_t<- house$t
N_polls <- house_y %>% length
N_states <- cong_dist %>% length
N_days <- house_t %>% max
house_y
house <- read_csv("house_polls.csv")
house <- house %>% filter(state == "North Carolina")
house$days_to_election = as.double(as.Date(house$election_date, "%m/%d/%Y") - as.Date(house$end_date, "%m/%d/%Y"))
house <- house %>% filter(candidate_party %in% c("DEM","REP"))
house$y = ifelse(house$candidate_party == "REP", house$pct, 100-house$pct) # support ratio for rep
days <- max(house$days_to_election)
total_day <- NULL
total_pct <- NULL
total_cong <- NULL
for(i in 1:length(district))
{
seq_day <- seq(as.double(days), 1, -1)
seq_pct <- rep(district[i], length(seq_day))
seq_cong <- rep(paste("district", noncompetitive[i]),length(seq_day))
total_seq <- rbind(total_day, as.matrix(seq_day))
total_pct <- rbind(total_pct, as.matrix(seq_pct))
total_cong <- rbind(total_cong, as.matrix(seq_cong))
}
append_house <- data.frame(total_seq, total_pct, total_cong)
names(append_house) <- c("days_to_election", "pct", "seat_name")
house <- dplyr::bind_rows(house, append_house)
cong_dist <- house$seat_name %>% unique
house$y = ifelse( is.na(house$y), house$pct, house$y) # support ratio for rep
house$r <- match(house$seat_name, cong_dist)
house$t <- house$days_to_election + 1 #WHY PLUS ONE?
house_y<- house$y
house_r<- house$r
house_t<- house$t
N_polls <- house_y %>% length
N_states <- cong_dist %>% length
N_days <- house_t %>% max
house_y
house_r
house_t
model_house <- function(){
for(k in 1:N_polls)
{
y[k] ~ dnorm(p[k],1/sigma2_y[r[k]]) #note no longer binomial
p[k] = theta[r[k],t[k]]
}
for(j in 2:N_days)
{
theta[1:N_states,j] ~ dmnorm(theta[1:N_states,j-1],Phi)
}
Phi ~ dwish(I_states,N_states+1) #fill in wishart parameters, google JAGS wishart distribution should turn it up
Sigma = inverse(Phi)
#which, Phi or Sigma is the covariance and which is the precision?
#optional: theta[1:N_states,1] ~ dmnorm(mu0,s0) #define mu0 and s0 in your jags_data object
#Use your hierarhciacl prior for sigma2_y from before
for(j in 1:N_states){
sigma2_y[j] = 1/sigma2_y_inv[j]
sigma2_y_inv[j] ~ dgamma(nu_y,nu_y*tau_y)
theta[j,1] ~ dnorm(mu0,pow(sigma2_0,-1))
}
nu_y ~ dunif(0,100)
tau_y ~ dunif(0,100)
nu_beta ~ dunif(0,100)
tau_beta ~ dunif(0,100)
mu0 ~ dnorm(50,pow(7.5,-2))
sigma2_0 = 1/sigma2_0_inv
sigma2_0_inv ~ dgamma(.5,.5)
}
house_jags_data <- list(y=house_y,t=house_t,r=house_r,
N_polls=N_polls,N_states=N_states,N_days=N_days)
house_jags_data$I_states <- diag(N_states)
#be sure to add your added parameters to parameters.to.save
jags_sims_house <- jags(data = house_jags_data,
model.file = model_house,
parameters.to.save = c("theta","Sigma","p","sigma2_y"),
n.iter = 100)
house_poll_plot_data <- tibble(y=house_jags_data$y,
t=house_jags_data$t %>% as.integer(),
state = states[house_jags_data$r])
house_beta_plot_data <- lapply(1:N_states,function(st){
sims <- jags_sims_house$BUGSoutput$sims.list$theta[,st,]
data.frame(state = states[st],
t=1:N_days,mean=colMeans(sims),
lb=apply(sims,2,quantile,probs=.025),
ub=apply(sims,2,quantile,probs=.975))}) %>%
bind_rows()
left_join(house_beta_plot_data,house_poll_plot_data) %>%
ggplot(aes(x=t)) +
geom_line(aes(y=mean)) +
geom_ribbon(aes(ymin = lb,ymax = ub),alpha = .2) +
geom_point(aes(y=y)) +
scale_x_reverse() +
facet_wrap(~ state)
house_sims <- jags_sims_house$BUGSoutput$sims.list$theta[,,1]
colnames(house_sims) <- states
house_poll_plot_data$p <- jags_sims_house$BUGSoutput$mean$p
house_poll_plot_data$sigma2y <- jags_sims_house$BUGSoutput$mean$sigma2_y[house_jags_data$r]
house_poll_plot_data$binom_v <- (house_poll_plot_data$p)*(100-house_poll_plot_data$p)/ senator$sample_size !!!
house_sims <- jags_sims_house$BUGSoutput$sims.list$theta[,,1]
colnames(house_sims) <- cong_dist
house_sims %>% {.>50} %>% colMeans()
temp <- as.data.frame( t(house_sims %>% {.>50} %>% colMeans()) )
temp$`North Carolina`
house_poll_plot_data <- tibble(y=house_jags_data$y,
t=house_jags_data$t %>% as.integer(),
state = cong_dist[house_jags_data$r])
house_beta_plot_data <- lapply(1:N_states,function(st){
sims <- jags_sims_house$BUGSoutput$sims.list$theta[,st,]
data.frame(state = states[st],
t=1:N_days,mean=colMeans(sims),
lb=apply(sims,2,quantile,probs=.025),
ub=apply(sims,2,quantile,probs=.975))}) %>%
bind_rows()
left_join(house_beta_plot_data,house_poll_plot_data) %>%
ggplot(aes(x=t)) +
geom_line(aes(y=mean)) +
geom_ribbon(aes(ymin = lb,ymax = ub),alpha = .2) +
geom_point(aes(y=y)) +
scale_x_reverse() +
facet_wrap(~ state)
house_poll_plot_data$p <- jags_sims_house$BUGSoutput$mean$p
house_poll_plot_data$sigma2y <- jags_sims_house$BUGSoutput$mean$sigma2_y[house_jags_data$r]
house_poll_plot_data$binom_v <- (house_poll_plot_data$p)*(100-house_poll_plot_data$p)/ senator$sample_size !!!
house_poll_plot_data <- tibble(y=house_jags_data$y,
t=house_jags_data$t %>% as.integer(),
cong_dist = cong_dist[house_jags_data$r])
house_beta_plot_data <- lapply(1:N_states,function(st){
sims <- jags_sims_house$BUGSoutput$sims.list$theta[,st,]
data.frame(cong_dist = cong_dist[st],
t=1:N_days,mean=colMeans(sims),
lb=apply(sims,2,quantile,probs=.025),
ub=apply(sims,2,quantile,probs=.975))}) %>%
bind_rows()
left_join(house_beta_plot_data,house_poll_plot_data) %>%
ggplot(aes(x=t)) +
geom_line(aes(y=mean)) +
geom_ribbon(aes(ymin = lb,ymax = ub),alpha = .2) +
geom_point(aes(y=y)) +
scale_x_reverse() +
facet_wrap(~ cong_dist)
district
